**********************
PowerShell transcript start
Start time: 20210425172350
Username: PANTHEON\administrator
RunAs User: PANTHEON\administrator
Configuration Name: 
Machine: AMPHITRITE (Microsoft Windows NT 10.0.17763.0)
Host Application: C:\Program Files\PowerShell\7\pwsh.dll -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command Import-Module 'c:\Users\administrator.PANTHEON\.vscode\extensions\ms-vscode.powershell-2021.2.2\modules\PowerShellEditorServices\PowerShellEditorServices.psd1'; Start-EditorServices -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '2021.2.2' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'c:\Users\administrator.PANTHEON\.vscode\extensions\ms-vscode.powershell-2021.2.2\modules' -EnableConsoleRepl -StartupBanner '' -LogLevel 'Normal' -LogPath 'c:\Users\administrator.PANTHEON\.vscode\extensions\ms-vscode.powershell-2021.2.2\logs\1619364223-95039128-dce5-4fec-96d8-b17ceac9ed101619364217042\EditorServices.log' -SessionDetailsPath 'c:\Users\administrator.PANTHEON\.vscode\extensions\ms-vscode.powershell-2021.2.2\sessions\PSES-VSCode-1540-625917' -FeatureFlags @() 
Process ID: 6636
PSVersion: 7.1.3
PSEdition: Core
GitCommitId: 7.1.3
OS: Microsoft Windows 10.0.17763
Platform: Win32NT
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.0, 7.1.3
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
WSManStackVersion: 3.0
**********************

Remove-Variable: C:\Users\administrator.PANTHEON\Documents\PowerShell\Microsoft.VSCode_profile.ps1:8:1
Line |
   8 |  Remove-Variable -Name quote
     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~
     | Cannot find a variable with the name 'quote'.
PS>@{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS>@{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS>Connect-AzAccount

Account                           SubscriptionName TenantId                             Environment
-------                           ---------------- --------                             -----------
ericvanos@xhelios.onmicrosoft.com MSDN Platforms   c395f110-ab2e-44ab-b096-7000e2511b32 AzureCloud

PS>@{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [$"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [."
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.T"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.Ten"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.Tent"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.Tena"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.Tenan"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.Tenant"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.TenantI"
PS C:\> TerminatingError(Resolve-Path): "The specified wildcard character pattern is not valid: [.TenantId"
PS C:\> $cred = Connect-AzAccount
PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> $cred

Account                           SubscriptionName TenantId                             Environment
-------                           ---------------- --------                             -----------
ericvanos@xhelios.onmicrosoft.com MSDN Platforms   c395f110-ab2e-44ab-b096-7000e2511b32 AzureCloud

PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> Set-AzContext $cred.TenantId
>> TerminatingError(Set-AzContext): "Cannot bind argument to parameter 'Context' because it is null."

Set-AzContext: Cannot bind argument to parameter 'Context' because it is null.

[91mSet-AzContext: [91mCannot bind argument to parameter 'Context' because it is null.[0m
PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> $cred

Account                           SubscriptionName TenantId                             Environment
-------                           ---------------- --------                             -----------
ericvanos@xhelios.onmicrosoft.com MSDN Platforms   c395f110-ab2e-44ab-b096-7000e2511b32 AzureCloud

PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> Set-AzContext $cred.subscriptionId
>> TerminatingError(Set-AzContext): "Cannot bind argument to parameter 'Context' because it is null."

Set-AzContext: Cannot bind argument to parameter 'Context' because it is null.

[91mSet-AzContext: [91mCannot bind argument to parameter 'Context' because it is null.[0m
PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> New-AzResourceGroup `
  -Name myResourceGroup `
  -Location "Central US"

ResourceGroupName : myResourceGroup
Location          : centralus
ProvisioningState : Succeeded
Tags              :
ResourceId        : /subscriptions/940541f2-0f53-48e7-8046-f6530b423abc/resourceGroups/myResourceGroup


PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> $bicepFile = "C:\Work\Azure\Biceps\AzureDeploy.bicep"
New-AzResourceGroupDeployment `
  -Name firstbicep `
  -ResourceGroupName myResourceGroup `
  -TemplateFile $bicepFile

DeploymentName          : firstbicep
ResourceGroupName       : myResourceGroup
ProvisioningState       : Succeeded
Timestamp               : 4/25/2021 3:40:13 PM
Mode                    : Incremental
TemplateLink            :
Parameters              :
Outputs                 :
DeploymentDebugLogLevel :


PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> Remove-AzResourceGroup -Name myResourceGroup -Force
True
PS C:\> @{ 'computerName' = if ([Environment]::MachineName) {[Environment]::MachineName}  else {'localhost'}; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
computerName                   AMPHITRITE
instanceId                     18edeaef-85d8-41c0-abeb-6515c3cb7d22
processId                      6636

PS C:\> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="Name"; value="Connect-AzAccount"
>> ParameterBinding(Get-Help): name="Online"; value="False"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"

NAME
    Connect-AzAccount

SYNOPSIS
    Connect to Azure with an authenticated account for use with cmdlets from the Az PowerShell modules.


SYNTAX
    Connect-AzAccount -AccessToken <System.String> -AccountId <System.String> [-ContextName <System.String>] [-DefaultProfile <Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer>]
    [-Environment <System.String>] [-Force] [-GraphAccessToken <System.String>] [-KeyVaultAccessToken <System.String>] [-MaxContextPopulation <System.Int32>] [-Scope {Process | CurrentUser}] [-SkipContextPopulation]
    [-SkipValidation] [-Subscription <System.String>] [-Tenant <System.String>] [-Confirm] [-WhatIf] [<CommonParameters>]

    Connect-AzAccount [-AccountId <System.String>] [-ContextName <System.String>] [-DefaultProfile <Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer>] [-Environment <System.String>]
    [-Force] -Identity [-ManagedServiceHostName <System.String>] [-ManagedServicePort <System.Int32>] [-ManagedServiceSecret <System.Security.SecureString>] [-MaxContextPopulation <System.Int32>] [-Scope {Process | CurrentUser}]
    [-SkipContextPopulation] [-Subscription <System.String>] [-Tenant <System.String>] [-Confirm] [-WhatIf] [<CommonParameters>]

    Connect-AzAccount -ApplicationId <System.String> -CertificateThumbprint <System.String> [-ContextName <System.String>] [-DefaultProfile
    <Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer>] [-Environment <System.String>] [-Force] [-MaxContextPopulation <System.Int32>] [-Scope {Process | CurrentUser}] [-ServicePrincipal]
    [-SkipContextPopulation] [-Subscription <System.String>] -Tenant <System.String> [-Confirm] [-WhatIf] [<CommonParameters>]

    Connect-AzAccount [-ContextName <System.String>] -Credential <System.Management.Automation.PSCredential> [-DefaultProfile <Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer>]
    [-Environment <System.String>] [-Force] [-MaxContextPopulation <System.Int32>] [-Scope {Process | CurrentUser}] -ServicePrincipal [-SkipContextPopulation] [-Subscription <System.String>] -Tenant <System.String> [-Confirm]
    [-WhatIf] [<CommonParameters>]

    Connect-AzAccount [-ContextName <System.String>] -Credential <System.Management.Automation.PSCredential> [-DefaultProfile <Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer>]
    [-Environment <System.String>] [-Force] [-MaxContextPopulation <System.Int32>] [-Scope {Process | CurrentUser}] [-SkipContextPopulation] [-Subscription <System.String>] [-Tenant <System.String>] [-Confirm] [-WhatIf]
    [<CommonParameters>]

    Connect-AzAccount [-ContextName <System.String>] [-DefaultProfile <Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer>] [-Environment <System.String>] [-Force] [-MaxContextPopulation
    <System.Int32>] [-Scope {Process | CurrentUser}] [-SkipContextPopulation] [-Subscription <System.String>] [-Tenant <System.String>] [-UseDeviceAuthentication] [-Confirm] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The `Connect-AzAccount` cmdlet connects to Azure with an authenticated account for use with cmdlets from the Az PowerShell modules. You can use this authenticated account only with Azure Resource Manager requests. To add an
    authenticated account for use with Service Management, use the `Add-AzureAccount` cmdlet from the Azure PowerShell module. If no context is found for the current user, the user's context list is populated with a context for
    each of their first 25 subscriptions. The list of contexts created for the user can be found by running `Get-AzContext -ListAvailable`. To skip this context population, specify the SkipContextPopulation switch parameter.
    After executing this cmdlet, you can disconnect from an Azure account using `Disconnect-AzAccount`.


RELATED LINKS
    Online Version: https://docs.microsoft.com/powershell/module/az.accounts/connect-azaccount

REMARKS
    To see the examples, type: "Get-Help Connect-AzAccount -Examples"
    For more information, type: "Get-Help Connect-AzAccount -Detailed"
    For technical information, type: "Get-Help Connect-AzAccount -Full"
    For online help, type: "Get-Help Connect-AzAccount -Online"

